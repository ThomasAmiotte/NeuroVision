
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, filedialog

import cv2
import os
from PIL import Image
import tensorflow as tf
from tensorflow import keras
import numpy as np
from sklearn.model_selection import train_test_split
from time import sleep

text_element = None
response = None
path = ""

def convert_jpg_to_png(jpg_path, png_path):
    # Ouvrir l'image JPG
    with Image.open(jpg_path) as img:
        # Convertir l'image en PNG et l'enregistrer
        img.save(png_path, 'PNG')

def resize_image_if_needed(image_path, max_height=500):
    with Image.open(image_path) as img:
        width, height = img.size

        # Calculer le nouveau rapport d'aspect
        new_width = int((max_height / height) * width)
        # Redimensionner l'image
        resized_img = img.resize((new_width, max_height), Image.LANCZOS)
        # Sauvegarder l'image redimensionnée en écrasant l'originale
        resized_img.save(image_path)
        print(f"L'image a été redimensionnée et sauvegardée à : {image_path}")



def import_file():
    global image_image_14,image_14
    global text_element
    global path
    file_path = filedialog.askopenfilename(
        filetypes=[("Image Files", "*.png;*.jpg;*.jpeg"), ("All Files", "*.*")]
    )
    if file_path:
        print(f"Fichier importé: {file_path}")
        path = file_path

    if text_element:
        canvas.delete(text_element)
    text_element = canvas.create_text(680.0,916.0,anchor="nw",text=file_path,fill="#000000",font=("Anton Regular", 10 * -1))
    convert_jpg_to_png(file_path, "temp/temp.png")
    resize_image_if_needed("temp/temp.png")
    image_image_14 = PhotoImage(file=relative_to_assets("../../temp/temp.png"))
    image_14 = canvas.create_image(1018.0,562.0,image=image_image_14)

image_15 = None
image_image_15 = None
def calcul():
    global image_15,image_image_15
    INPUT_SIZE = 64
    global path

    # Charger le modèle
    model = keras.models.load_model('BrainTumor10Epochs.h5')

    # Compiler le modèle
    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

    # Lire et préparer l'image
    if path:
        global response
        print(path)
        new_image = cv2.imread(path)
        new_image = cv2.cvtColor(new_image, cv2.COLOR_BGR2RGB)  # Convertir en RGB
        new_image = Image.fromarray(new_image, 'RGB')
        new_image = new_image.resize((INPUT_SIZE, INPUT_SIZE))
        new_image = np.array(new_image)  # Convertir en tableau NumPy
        new_image = new_image / 255.0  # Normaliser l'image

        # Ajouter une dimension supplémentaire pour le batch
        new_image = np.expand_dims(new_image, axis=0)

        # Faire la prédiction
        prediction = model.predict(new_image)
        print(f'Prediction: {"Tumor" if prediction[0][0] > 0.5 else "No Tumor"}') 
        image_image_15 = PhotoImage(file=relative_to_assets("image_15.png"))
        image_15 = canvas.create_image(1061.0,190.0,image=image_image_15)
        if response:
            canvas.delete(response)
        if prediction[0][0]>0.5:
            response = canvas.create_text(1494.0,650.0,anchor="nw",text="Tumeur détécté !",fill="#000000",font=("Inter Medium", 26 * -1))
        else:
            response = canvas.create_text(1494.0,650.0,anchor="nw",text="Tumeur non détécté !",fill="#000000",font=("Inter Medium", 26 * -1))
    else:
        image_image_15 = PhotoImage(file=relative_to_assets("image_18.png"))
        image_15 = canvas.create_image(1061.0,190.0,image=image_image_15)


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\thoma\Desktop\transverseL3\gui\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1920x1080")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 1080,
    width = 1920,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    75.0,
    74.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    220.0,
    75.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    1018.0,
    559.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    290.0,
    752.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    289.0,
    328.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    1651.0,
    510.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    1015.0,
    931.0,
    image=image_image_7
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: import_file(),
    relief="flat"
)
button_1.place(
    x=1018.0,
    y=901.0,
    width=326.0,
    height=52.3607177734375
)


button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: calcul(),
    relief="flat"
)
button_2.place(
    x=1452.0,
    y=869.7373046875,
    width=330.0,
    height=102.7991943359375
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    1743.0,
    86.0,
    image=image_image_8
)

canvas.create_text(
    233.0,
    559.0,
    anchor="nw",
    text="History",
    fill="#000000",
    font=("Anton Regular", 32 * -1)
)

canvas.create_text(
    217.0,
    190.0,
    anchor="nw",
    text="Accuracy",
    fill="#000000",
    font=("Anton Regular", 32 * -1)
)

canvas.create_text(
    233.0,
    427.0,
    anchor="nw",
    text="99.96%\n",
    fill="#000000",
    font=("Anton Regular", 32 * -1)
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    285.0,
    756.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    287.0,
    684.0,
    image=image_image_10
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    283.0,
    828.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    287.0,
    900.0,
    image=image_image_12
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    290.0,
    320.0,
    image=image_image_13
)





image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    437.0,
    580.0,
    image=image_image_16
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    438.0,
    213.0,
    image=image_image_17
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    1650.5,
    355.0,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#F3F2F2",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=1506.0,
    y=330.0,
    width=289.0,
    height=40.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    1651.0,
    481.0,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#F3F2F2",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=1507.0,
    y=455.0,
    width=288.0,
    height=40.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    1651.0,
    599.0,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#F3F2F2",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=1507.0,
    y=571.0,
    width=288.0,
    height=40.0
)

canvas.create_text(
    1494.0,
    284.0,
    anchor="nw",
    text="Prénom",
    fill="#000000",
    font=("Inter Medium", 16 * -1)
)

canvas.create_text(
    1494.0,
    396.0,
    anchor="nw",
    text="Nom",
    fill="#000000",
    font=("Inter Medium", 16 * -1)
)

canvas.create_text(
    1494.0,
    527.0,
    anchor="nw",
    text="Date",
    fill="#000000",
    font=("Inter Medium", 16 * -1)
)

canvas.create_rectangle(
    1381.0,
    132.0,
    1407.0,
    152.0,
    fill="#FFFFFF",
    outline="")
window.resizable(False, False)
window.mainloop()
